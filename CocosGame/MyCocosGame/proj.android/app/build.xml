<?xml version="1.0" encoding="UTF-8"?>
<project name="COK_Global" default="release">  

    <property file="local.properties" />
    <property file="ant.properties" />

 <property environment="env" />
    <condition property="sdk.dir" value="${env.ANDROID_HOME}">
        <isset property="env.ANDROID_HOME" />
    </condition>

    <loadproperties srcFile="project.properties" />

    <!-- quick check on sdk.dir -->
    <fail
            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable."
            unless="sdk.dir"
    />

    <import file="custom_rules.xml" optional="true" />
	
	
    <import file="${sdk.dir}/tools/ant/build.xml" />

    <!-- multi dex for COK -->
    <property name="cok.multi.dex" value="true" />

    <macrodef name="dex-helper">
      <element name="external-libs" optional="yes" />
      <attribute name="nolocals" default="false" />
      <sequential>
          <!-- sets the primary input for dex. If a pre-dex task sets it to
               something else this has no effect -->
        <property name="out.dex.input.absolute.dir" value="${out.classes.absolute.dir}" />

        <!-- set the secondary dx input: the project (and library) jar files
             If a pre-dex task sets it to something else this has no effect -->
        <if>
          <condition>
            <isreference refid="out.dex.jar.input.ref" />
          </condition>
          <else>
            <path id="out.dex.jar.input.ref">
              <path refid="project.all.jars.path" />
            </path>
          </else>
        </if>
        <condition property="verbose.option" value="--verbose" else="">
          <istrue value="${verbose}" />
        </condition>
        <condition property="jumbo.option" value="--force-jumbo" else="">
          <istrue value="${dex.force.jumbo}" />
        </condition>

        <if>
            <condition>
                <equals arg1="${cok.multi.dex}" arg2="false" />
            </condition>
            <then>
                <echo>normal dex</echo>
                <dex executable="${dx}"
                        output="${intermediate.dex.file}"
                        dexedlibs="${out.dexed.absolute.dir}"
                        nolocals="@{nolocals}"
                        forceJumbo="${dex.force.jumbo}"
                        disableDexMerger="${dex.disable.merger}"
                        verbose="${verbose}">
                    <path path="${out.dex.input.absolute.dir}"/>
                    <path refid="out.dex.jar.input.ref" />
                    <external-libs />
            </dex>
            </then>
            <else>
                <echo>using multi-dex,compiled files and external libraries into ${out.absolute.dir}</echo>
                <echo>Dexing ${out.classes.absolute.dir} and ${toString:out.dex.jar.input.ref}</echo>
                <apply executable="${dx}" failonerror="true" parallel="true">
                    <arg value="-JXmx2048M" />
                    <arg value="--dex" />
                    <arg value="--force-jumbo" />
                    <arg value="--multi-dex" />
                    <arg value="--set-max-idx-number=57344" />
                    <arg value="--main-dex-list=multidexV2.keep" />
                    <arg value="--output=${out.absolute.dir}" />
                    <arg line="${jumbo.option}" />
                    <arg line="${verbose.option}" />
                    <arg path="${out.classes.absolute.dir}" />
                    <path refid="out.dex.jar.input.ref" />
                    <external-libs />
                </apply>
                <sleep seconds="1"/>
            </else>
        </if>
      </sequential>
    </macrodef>

    <property name="cok.dex1.file" value="classes.dex" />
    <property name="cok.dex2.file" value="classes2.dex" />
    <property name="cok.dex3.file" value="classes3.dex" />
    <property name="cok.dex1.path" value="${out.absolute.dir}/${cok.dex1.file}" />
    <property name="cok.dex2.path" value="${out.absolute.dir}/${cok.dex2.file}" />
    <property name="cok.dex3.path" value="${out.absolute.dir}/${cok.dex3.file}" />

    <!-- This is copied directly from <android-sdk>/tools/ant/build.xml,
         just added the "-post-package-resources" dependency -->
    <target name="-package" depends="-dex, -package-resources, -post-package-resources">
        <!-- only package apk if *not* a library project -->
        <do-only-if-not-library elseText="Library project: do not package apk..." >
            <if condition="${build.is.instrumented}">
                <then>
                    <package-helper>
                        <extra-jars>
                            <!-- Injected from external file -->
                            <jarfile path="${emma.dir}/emma_device.jar" />
                        </extra-jars>
                    </package-helper>
                </then>
                <else>
                    <package-helper />
                </else>
            </if>
        </do-only-if-not-library>
    </target>

    <target name="-post-package-resources">
        <if>
            <condition>
              <and>
                <available file="${cok.dex2.path}" />
                <or>
                  <not>
                    <uptodate srcfile="${cok.dex2.path}" targetfile="${out.absolute.dir}/${resource.package.file.name}" />
                  </not>
                  <uptodate srcfile="${out.absolute.dir}/${resource.package.file.name}" targetfile="${out.absolute.dir}/${resource.package.file.name}.d" />
                </or>
              </and>
            </condition>
            <then>
                <echo>Adding classes2.dex to ${resource.package.file.name}</echo>
                <exec executable="${aapt}" dir="${out.absolute.dir}" failonerror="true">
                    <arg line='add -v "${out.absolute.dir}/${resource.package.file.name}" ${cok.dex2.file}'/>
                </exec>
                <if>
                    <condition>
                        <available file="${cok.dex3.path}"/>
                    </condition>
                    <then>
                        <echo>Adding classes3.dex to ${resource.package.file.name}</echo>
                        <exec executable="${aapt}" dir="${out.absolute.dir}" failonerror="true">
                            <arg line='add -v "${out.absolute.dir}/${resource.package.file.name}" ${cok.dex3.file}'/>
                        </exec>
                    </then>
                </if>
                <!-- add more dexfile logic here -->
            </then>
        </if>
    </target> 
    <!-- multi dex end -->


</project>
